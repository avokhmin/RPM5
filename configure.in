dnl configure.in for RPM
dnl
dnl Don't add checks for things we can't work around, unless those checks
dnl failing causes the script to bomb out with a message. If we can't fix
dnl it, why check it?

AC_INIT(rpm.c)
AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE(rpm, 2.93)
AM_CONFIG_HEADER(config.h)

AC_PREREQ(2.12)         dnl Minimum Autoconf version required.

dnl XXX AM_MAINTAINER_MODE

dnl Set of available languages.
ALL_LINGUAS="cs de fi fr pt_BR ru sk sr sv tr"

LIBOBJS=

dnl Checks for programs.
AC_ARG_PROGRAM
AC_PROG_CC
if test "$ac_cv_prog_gcc" = yes; then
    CFLAGS="$CFLAGS -Wall -Wpointer-arith -Wstrict-prototypes -Wmissing-prototypes -Wno-char-subscripts"
fi

AC_PROG_CPP
AC_PROG_GCC_TRADITIONAL
AC_PROG_INSTALL

dnl
dnl if CC is gcc, we can rebuild the dependencies (since the depend rule
dnl requires gcc).  If it's not, don't rebuild dependencies -- use what was
dnl shipped with RPM.
dnl
if test X"$GCC" = Xyes ; then
	TARGET="depend everything"
else
	TARGET="everything"
	#
	# let the top level Makefile know that we're done with `depend'
	#
	echo > .depend-done
fi
AC_SUBST(TARGET)


dnl
dnl This now uses libtool. Put
dnl	LDFLAGS_STATIC="-all"
dnl to attempt static executables using libtool. Otherwise
dnl	LDFLAGS_STATIC=""
dnl
AC_MSG_CHECKING(flag used by libtool to link rpm)
if test X"$GCC" = Xyes ; then
	case "$target" in
		*-*-solaris*)	LDFLAGS_STATIC="";;
		*-*-*)		LDFLAGS_STATIC="-all";;
	esac
elif test X"$CC" = Xcc ; then
	case "$target" in
		*-*-linux*)	LDFLAGS_STATIC="-all";;
		*-*-freebsd*)	LDFLAGS_STATIC="-all";;
		*-*-osf*)	LDFLAGS_STATIC="-all";;
		*-*-aix*)	LDFLAGS_STATIC="";;  # -Wl,-bnso doesn't seem to work...
		*-*-hpux*)	LDFLAGS_STATIC="-all";;
		*-*-solaris*)	LDFLAGS_STATIC="";;
		*-*-irix*)	LDFLAGS_STATIC="";;  #should be -non_shared, but can't
											# link because of crt1.o then.
		*-*-ultrix*)	LDFLAGS_STATIC="-all";;  #ultrix doesn't have shared libs.
		*-*-*)		LDFLAGS_STATIC=""
AC_MSG_WARN([

Unable to guess what option to pass to $CC to generate a static
executable.  You will need to set the LDFLAGS_STATIC macro in Makefile.inc to
the appropriate argument(s) if you want to build a static rpm executable.

])
		;;
	esac
else
	# just link it dynamically
	LDFLAGS_STATIC=""
fi
LDFLAGS_STATIC="${LDFLAGS_STATIC}-static"	# libtool format
AC_MSG_RESULT($LDFLAGS_STATIC)

AC_MSG_CHECKING(POSIX chmod)
touch foo.chmodtest
chmod 744 foo.chmodtest
chmod +X foo.chmodtest 2>/dev/null
a=`ls -l foo.chmodtest | awk '{print $1}'`
rm -f foo.chmodtest
if test "$a" = "-rwxr-xr-x"; then
    AC_MSG_RESULT(yes)
    FIXPERMS=a+rX,g-w,o-w 
else
    AC_MSG_RESULT(no (tell your OS vendor about GNU fileutils))
    FIXPERMS=a+r,g-w,o-w 
fi

dnl
dnl see if we have a mkdir that supports `-p'.
dnl
AC_PATH_PROGS(MKDIR, mkdir, mkdir)
AC_MSG_CHECKING(if $MKDIR supports -p)
rm -rf conftest
$MKDIR -p conftest/a 2>/dev/null
if test $? = 0 ; then
	rmdir conftest/a 2>/dev/null
	if test $? = 0  ; then
		:
	else
		MKDIR_P=0
	fi

	rmdir conftest 2>/dev/null
	if test $? = 0 ; then
		MKDIR_P="$MKDIR -p"
	else
		MKDIR_P=0
	fi
else
	MKDIR_P=0
fi

if test X"$MKDIR_P" = X0 ; then
	AC_MSG_RESULT(no)
	MKDIR_P="`echo ${prefix}/lib/rpm/mkinstalldirs`"
else
	AC_MSG_RESULT(yes)
fi
dnl
dnl substitute this into config.h, so the C source picks it up.
dnl
AC_DEFINE_UNQUOTED(MKDIR_P, "${MKDIR_P}")



AC_AIX
AC_MINIX
AC_ISC_POSIX

dnl This test must precede tests of compiler characteristics like
dnl that for the inline keyword, since it may change the degree to
dnl which the compiler supports such features.
AM_C_PROTOTYPES

AC_PROG_AWK
AC_PROG_LN_S
AC_PROG_MAKE_SET
AM_PROG_LIBTOOL

AC_CHECK_TOOL(AR, ar, :)

if test "$cross_compiling" != "yes"; then
    MYPATH="/bin:/usr/bin:/usr/local/bin:$PATH:/opt/gnu/bin"
    AC_MSG_CHECKING(for gzip location)
    if test -z "$GZIPBIN"; then
	    oldifs="$IFS"
	    IFS=:
	    for n in $MYPATH; do
		    if test -f $n/gzip; then
			    GZIPBIN="$n/gzip";
			    break
		    fi
	    done
	    IFS="$oldifs"
    fi

    if test -z "$GZIPBIN"; then
	    GZIPBIN="/bin/gzip"
	    AC_MSG_RESULT(no)
	    AC_MSG_WARN(Can't find gzip, assuming $GZIPBIN)
    else
	    AC_MSG_RESULT($GZIPBIN)
    fi

    AC_MSG_CHECKING(for bzip2 location)
    if test -z "$BZIP2BIN"; then
	    oldifs="$IFS"
	    IFS=:
	    for n in $MYPATH; do
		    if test -f $n/bzip2; then
			    BZIP2BIN="$n/bzip2";
			    break
		    fi
	    done
	    IFS="$oldifs"
    fi

    if test -z "$BZIP2BIN"; then
	    BZIP2BIN="/usr/bin/bzip2"
	    AC_MSG_RESULT(no)
	    AC_MSG_WARN(Can't find bzip2, assuming $BZIP2BIN)
    else
	    AC_MSG_RESULT($BZIP2BIN)
    fi

    AC_MSG_CHECKING(for pgp location)
    if test -z "$PGPBIN"; then
	    oldifs="$IFS"
	    IFS=:
	    for n in $MYPATH; do
		    if test -f $n/pgp; then
			    PGPBIN="$n/pgp";
			    break
		    fi
	    done
	    IFS="$oldifs"
    fi

    if test -z "$PGPBIN"; then
	    PGPBIN="/usr/bin/pgp"
    else
	    AC_MSG_RESULT($PGPBIN)
    fi

    AC_MSG_CHECKING(old version of patch)
    PATCHVERSION=`patch --version 2>&1`

    if test "$PATCHVERSION" = "Patch version 2.1"; then
	AC_DEFINE(HAVE_OLDPATCH_21)
	AC_MSG_RESULT(patch older then 2.2 found)
    else
	AC_MSG_RESULT(patch later then 2.2 found)
    fi
fi

addlib() {
  l=$1
  shift
  case "$target" in 
    *-*-solaris*)	LIBS="$LIBS -L$l -R$l $*";;
    *)		LIBS="$LIBS -L$l $*";;
  esac
}

localdone=
for dir in $prefix /usr/local
do
	case $dir in
	NONE|/usr)	continue;;
	/usr/local)
		if test X$localdone != X ; then continue; fi
		localdone="$dir"
		;;
	esac

	AC_MSG_CHECKING(for $dir/lib in LIBS)
	if test -d $dir/lib ; then
		addlib $dir/lib
		AC_MSG_RESULT(yes)
	else
		AC_MSG_RESULT(no)
	fi

	AC_MSG_CHECKING(for $dir/include in INCPATH)
	if test -d $dir/include ; then
		INCPATH="$INCPATH -I$dir/include"
		AC_MSG_RESULT(yes)
	else
		AC_MSG_RESULT(no)
	fi
done

AC_MSG_CHECKING(for /usr/ucblib in LIBS)
if test -d /usr/ucblib ; then
	if test "$build" = "mips-sni-sysv4" ; then
		addlib /usr/ccs/lib -lc
	fi

	addlib /usr/ucblib
	
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi

dnl Checks for libraries.

AC_CHECK_FUNC(strcasecmp, [], [
    AC_CHECK_LIB(ucb, strcasecmp, [LIBS="$LIBS -lc -lucb" USEUCB=y])
])
AC_CHECK_FUNC(setreuid, [], [
    AC_CHECK_LIB(ucb, setreuid, [if echo $LIBS | grep -- -lucb >/dev/null ;then :; else LIBS="$LIBS -lc -lucb" USEUCB=y;fi])
])

AC_CHECK_FUNC(rand, [], [
    AC_CHECK_LIB(rand, rand, [LIBS="$LIBS -lm"])
])

AC_CHECK_FUNC(getdomainname, [], [
    AC_CHECK_LIB(nsl, getdomainname, [LIBS="$LIBS -lnsl"])
])
AC_CHECK_FUNC(socket, [], [
    AC_CHECK_LIB(socket, socket, [LIBS="$LIBS -lsocket"])
])

AC_CHECK_FUNC(dbopen, [],
  AC_CHECK_LIB(db1, dbopen, [],
    AC_CHECK_LIB(db, dbopen, [],
       AC_MSG_WARN([sorry this package needs libdb.a (from the db package)])))
           )

AC_CHECK_FUNC(fork, [], [echo "using vfork() instead of fork()";
	LIBOBJS=fakefork.o])

dnl AmigaOS and IXEmul have a fork() dummy
    case "$target" in
	m68k-*-amigaos ) 
		echo "Building for AmigaOS: using vfork() instead of fork()"; 
		CFLAGS="$CFLAGS -Dfork=vfork" 
		;;
esac


ZLIB=
for zlib in z gz ; do
   AC_CHECK_LIB(${zlib}, gzread, 
	[LIBS="$LIBS -l${zlib}"; break], 
	[if test ${zlib} = gz; then 
	    AC_MSG_WARN([sorry this package needs libz.a or libgz.a (from the zlib package)]) 
	 fi]
	       )
done

BZ2LIB=
for bz2lib in bz2 ; do
   AC_CHECK_LIB(${bz2lib}, bzread, 
	[LIBS="$LIBS -l${bz2lib}"; break], 
	[if test ${bz2lib} = bz2; then 
	    AC_MSG_WARN([missing libbz2.a (from the bzip2 package)]) 
	 fi]
	       )
done

dnl XXX these are needed only by rpmgettext right now
AM_FUNC_ERROR_AT_LINE

dnl ==> AM_GNU_GETTEXT does this (and more)
dnl AC_CHECK_HEADERS(unistd.h limits.h locale.h malloc.h string.h sys/param.h)

AM_GNU_GETTEXT
dnl TVM:
dnl horrible *temporary* hack to make sure that if we found gettext() in
dnl -lintl that we add -lintl *back* to $LIBS.
dnl
if test X$gt_cv_func_gettext_libintl = Xyes ; then
    LIBS="-lintl $LIBS"
fi

dnl Checks for header files we can live without.
AC_HEADER_STDC
AC_HEADER_MAJOR
AC_HEADER_DIRENT
AC_HEADER_TIME

AC_CHECK_HEADERS(db_185.h db1/db.h)
AC_CHECK_HEADERS(fcntl.h getopt.h grp.h memory.h netdb.h pwd.h utime.h)

AC_CHECK_HEADERS(sys/socket.h sys/select.h)
AC_CHECK_HEADERS(sys/types.h sys/stdtypes.h)
AC_CHECK_HEADERS(sys/mman.h sys/resource.h sys/utsname.h sys/wait.h)

AC_CHECK_HEADERS(netinet/in_systm.h)
AC_CHECK_HEADERS(machine/types.h)
AC_CHECK_HEADERS(mntent.h sys/mnttab.h sys/systemcfg.h)
AC_CHECK_HEADERS(sys/mount.h sys/mntctl.h sys/vmount.h)
AC_CHECK_HEADERS(bzlib.h libio.h zlib.h)

dnl whether or not we should try build convertdb
BUILD_RPM_CONVERT=yes
AC_CHECK_HEADERS(gdbm.h,BUILD_RPM_CONVERT=yes,BUILD_RPM_CONVERT=no)
AC_MSG_CHECKING(if convertdb should be built)
if test X"$BUILD_RPM_CONVERT" = X"yes"; then
    BUILD_RPM_CONVERT=rpmconvert
    AC_MSG_RESULT(yes)
else
    BUILD_RPM_CONVERT=
    AC_MSG_RESULT(no)
fi
AC_SUBST(BUILD_RPM_CONVERT)

dnl DU 4.0 fiddles.
AC_CHECK_HEADERS(glob.h)
AC_MSG_CHECKING(for struct statfs)
AC_EGREP_HEADER(struct statfs,sys/vfs.h,[
  AC_MSG_RESULT(in sys/vfs.h)
  AC_DEFINE(STATFS_IN_SYS_VFS)],
[
  AC_EGREP_HEADER(struct statfs,sys/mount.h,[
    AC_MSG_RESULT(in sys/mount.h)
    AC_DEFINE(STATFS_IN_SYS_MOUNT)],
  [
    AC_EGREP_HEADER(struct statfs,sys/statfs.h,[
      AC_MSG_RESULT(in sys/statfs.h)
      AC_DEFINE(STATFS_IN_SYS_STATFS)],
    [
      AC_MSG_RESULT(not found)
    ])
  ])
])


AC_C_INLINE

dnl look for libc features
PROVIDES_ERRNO=no
AC_MSG_CHECKING(if <netdb.h> defines h_errno)
AC_TRY_LINK([#include <netdb.h>],printf("%d",h_errno),PROVIDES_ERRNO=yes)
AC_MSG_RESULT($PROVIDES_ERRNO)
if test $PROVIDES_ERRNO = yes; then
	AC_DEFINE(HAVE_HERRNO)
fi

dnl If a system doesn't have S_IFSOCK, define it as 0 which will
dnl make S_ISSOCK always return false (nice, eh?)
AC_MSG_CHECKING(if <sys/stat.h> defines S_IFSOCK)
AC_TRY_LINK([#include <sys/stat.h>],printf("%d", S_IFSOCK),
	HAS_S_IFSOCK=yes,HAS_S_IFSOCK=no)
AC_MSG_RESULT($HAS_S_IFSOCK)
if test $HAS_S_IFSOCK = yes; then
	AC_DEFINE(HAVE_S_IFSOCK)
fi

dnl Some Unix's are missing S_ISLNK, S_ISSOCK
AC_MSG_CHECKING(if <sys/stat.h> defines S_ISLNK)
AC_TRY_LINK([#include <sys/stat.h>],printf("%d", S_ISLNK(0755)),
	HAS_S_ISLNK=yes,HAS_S_ISLNK=no)
AC_MSG_RESULT($HAS_S_ISLNK)
if test $HAS_S_ISLNK = yes; then
	AC_DEFINE(HAVE_S_ISLNK)
fi

AC_MSG_CHECKING(if <sys/stat.h> defines S_ISSOCK)
AC_TRY_LINK([#include <sys/stat.h>],printf("%d", S_ISSOCK(0755)),
	HAS_S_ISSOCK=yes,HAS_S_ISSOCK=no)
AC_MSG_RESULT($HAS_S_ISSOCK)
if test $HAS_S_ISSOCK = yes; then
	AC_DEFINE(HAVE_S_ISSOCK)
fi

AC_MSG_CHECKING(if timezone is defined)
AC_TRY_LINK([#include <time.h>],printf("%ld", timezone),
      HAS_TIMEZONE=yes,HAS_TIMEZONE=no)
AC_MSG_RESULT($HAS_TIMEZONE)

dnl Check for missing typedefs
AC_TYPE_MODE_T
AC_TYPE_PID_T

dnl Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_VPRINTF

AC_FUNC_FNMATCH
if test $ac_cv_func_fnmatch_works = no; then
   LIBOBJS="$LIBOBJS fnmatch.o"
   AC_DEFINE_UNQUOTED(fnmatch, rpl_fnmatch)
fi

dnl XXX AC_FUNC_MEMCMP
dnl XXX AC_FUNC_MMAP
dnl XXX AC_TYPE_SIGNAL
dnl XXX AC_FUNC_STRCOLL
dnl XXX AC_FUNC_STRFTIME
dnl XXX AC_FUNC_UTIME_NULL
dnl XXX AC_FUNC_VFORK
dnl XXX AC_CHECK_FUNCS(gethostname lchown mkdir mkfifo rmdir select uname)

AC_REPLACE_FUNCS(getcwd getwd glob inet_aton putenv realpath)
AC_REPLACE_FUNCS(strdup strerror strtol strtoul strspn strstr)

dnl XXX stpcpy/stpncpy needed by rpmgettext
AC_REPLACE_FUNCS(stpcpy stpncpy strcasecmp strncasecmp strcspn)
AC_REPLACE_FUNCS(basename)

AC_CHECK_FUNCS(setlocale)

AC_CHECK_FUNC(getmntent, AC_DEFINE(HAVE_GETMNTENT), [
  AC_CHECK_FUNC(mntctl, AC_DEFINE(HAVE_MNTCTL),[
    AC_CHECK_FUNC(getmntinfo_r, AC_DEFINE(HAVE_GETMNTINFO_R), [
      AC_CHECK_LIB(c_r, getmntinfo_r, [LIBS="$LIBS -lc_r"; 
					AC_DEFINE(HAVE_GETMNTINFO_R)],
                 LIBOBJS="$LIBOBJS getmntent.o")])])])
LCHOWN=no
AC_CHECK_FUNC(lchown, [LCHOWN=yes; AC_DEFINE(HAVE_LCHOWN)])

if test "$LCHOWN" = no; then 
    dnl Does chown() follow symlinks? This should be a good enough test.
    AC_MSG_CHECKING(whether chown() follows symlinks)
    AC_ARG_ENABLE([broken-chown],
    [  --enable-broken-chown   this system's chown follows symbolic links], 
	    result=$enableval, result=unknown)
    if echo "$build" | egrep "(aix)|(hpux)|(linux)" > /dev/null ; then
	result=yes
    elif echo "$build" | egrep "(nextstep)" > /dev/null ; then
	result=no
    fi
    if test $result = unknown; then
	if test `id | cut -f2 -d\= | cut -f1 -d\(` = 0; then
	    rm -f foo bar
	    touch foo
	    ln -s foo bar
	    chown 10 bar
	    if test `ls -l foo | awk '{print $3}'` != "root"; then
		result=yes
	    else
		result=no
	    fi
	    rm -f foo bar
	else
	    AC_MSG_CHECKING((cannot check by non-root user))
	    result=no
	fi
    fi

    AC_MSG_RESULT($result)
    if test $result = yes; then
	    AC_DEFINE(CHOWN_FOLLOWS_SYMLINK)
    fi
fi


dnl
dnl figure out what root's primary group is
dnl
AC_MSG_CHECKING(root's primary group)
AC_TRY_RUN([#include <stdio.h>
#include <sys/types.h>
#include <pwd.h>
#include <grp.h>

int main()
{
	struct passwd *root = NULL;
	struct group *roots_group = NULL;
	FILE * tempfile = NULL;

	root = getpwuid( (uid_t) 0 );
	if (root != NULL) {
		roots_group = getgrgid(root->pw_gid);
		if (roots_group != NULL) {
			tempfile = fopen("conftest_rootg", "w");
			if (tempfile != NULL) {
				fprintf(tempfile, "%s\n", roots_group->gr_name);
				fclose(tempfile);
				exit(0);
			}
		}
	}

	exit(1);
}], ROOT_GROUP=`cat conftest_rootg`,
	ROOT_GROUP="root",ROOT_GROUP="root"
)
AC_DEFINE_UNQUOTED(ROOT_GROUP, "$ROOT_GROUP")
AC_MSG_RESULT($ROOT_GROUP)
AC_SUBST(ROOT_GROUP)

if test "x$varprefix" = "x"; then
    varprefix=`echo $prefix | sed 's/usr/var/'`
    test "x$prefix" = xNONE && varprefix=`echo $ac_default_prefix | sed 's/usr/var/'`
fi

if test "x$tmpdir" = "x"; then
    if test -d $varprefix/tmp; then
	tmpdir=$varprefix/tmp
    else
	if test -d /var/tmp; then
	    tmpdir=/var/tmp
	else
	    tmpdir=/tmp
	fi
    fi
fi

if echo "$build_os" | grep sco > /dev/null; then
	echo "hacking things up for sco"
	AC_DEFINE(NEED_STRINGS_H)
	AC_DEFINE(HAVE_STRUCT_MNTTAB)
elif echo "$build_os" | grep sunos > /dev/null; then
	echo "hacking things up for sunos"
	CFLAGS="$CFLAGS -D__USE_FIXED_PROTOTYPES__"
	AC_DEFINE(NEED_STRINGS_H)
	AC_DEFINE(NEED_MYREALLOC)
	LIBOBJS="$LIBOBJS myrealloc.o"
fi

#
# get rid of the 4-th tuple, if config.guess returned "linux-gnu" for build_os
#
if echo "$build_os" | grep '.*-gnu' > /dev/null ; then
	build_os=`echo "${build_os}" | sed 's/-gnu$//'`
fi

changequote(<, >)
build_os_exact="${build_os}"
build_os_major=`echo "${build_os}" | sed 's/\..*$//'`
build_os_noversion=`echo "${build_os}" | sed 's/[0-9]*\..*$//'`
changequote([, ])

rm -f ./find-provides
if test -f ${srcdir}/autodeps/${build_cpu}-${build_os_exact}.prov ; then
	echo "using ${srcdir}/autodeps/${build_cpu}-${build_os_exact}.prov for automatic provides generation"
    ln -s ${srcdir}/autodeps/${build_cpu}-${build_os_exact}.prov ./find-provides
elif test -f ${srcdir}/autodeps/${build_os_exact}.prov ; then
	echo "using ${srcdir}/autodeps/${build_os_exact}.prov for automatic provides generation"
    ln -s ${srcdir}/autodeps/${build_os_exact}.prov ./find-provides
elif test -f ${srcdir}/autodeps/${build_os_major}.prov ; then
	echo "using ${srcdir}/autodeps/${build_os_major}.prov for automatic provides generation"
    ln -s ${srcdir}/autodeps/${build_os_major}.prov ./find-provides
elif test -f ${srcdir}/autodeps/${build_os_noversion}.prov ; then
	echo "using ${srcdir}/autodeps/${build_os_noversion}.prov for automatic provides generation"
    ln -s ${srcdir}/autodeps/${build_os_noversion}.prov ./find-provides
else
    echo "*** no default provides information is available for ${build_os_noversion}"
    ln -s ${srcdir}/autodeps/none ./find-provides
fi

rm -f ./find-requires
if test -f ${srcdir}/autodeps/${build_cpu}-${build_os_exact}.req ; then
	echo "using ${srcdir}/autodeps/${build_cpu}-${build_os_exact}.req for automatic requires generation"
    ln -s ${srcdir}/autodeps/${build_cpu}-${build_os_exact}.req ./find-requires
elif test -f ${srcdir}/autodeps/${build_os_exact}.req ; then
	echo "using ${srcdir}/autodeps/${build_os_exact}.req for automatic requires generation"
    ln -s ${srcdir}/autodeps/${build_os_exact}.req ./find-requires
elif test -f ${srcdir}/autodeps/${build_os_major}.req ; then
	echo "using ${srcdir}/autodeps/${build_os_major}.req for automatic requires generation"
    ln -s ${srcdir}/autodeps/${build_os_major}.req ./find-requires
elif test -f ${srcdir}/autodeps/${build_os_noversion}.req ; then
	echo "using ${srcdir}/autodeps/${build_os_noversion}.req for automatic requires generation"
    ln -s ${srcdir}/autodeps/${build_os_noversion}.req ./find-requires
else
    echo "*** no default requires information is available for ${build_os_noversion}"
    ln -s ${srcdir}/autodeps/none ./find-requires
fi

dnl Determine the canonical arch-vendor-os for the build machine
case "${build_cpu}" in
i386|i486|i586|i686|ix86)	RPMCANONARCH=i386 ;;
alpha*)		RPMCANONARCH=alpha ;;
sparc*)		RPMCANONARCH=sparc ;;
powerpc*)	RPMCANONARCH=ppc ;;
*)		RPMCANONARCH=unknown ;;
esac
RPMCANONVENDOR="$build_vendor"
case "${build_vendor}" in
unknown|pc)	test -f /etc/redhat-release && RPMCANONVENDOR=redhat ;;
esac
RPMCANONOS="$build_os_noversion"
AC_SUBST(RPMCANONARCH)
AC_SUBST(RPMCANONVENDOR)
AC_SUBST(RPMCANONOS)

if test -n "$LIBOBJS" ; then
    LIBMISC='$(top_builddir)/misc/libmisc.a'
fi

LOCALEDIR="`echo ${prefix}/share/locale`"
AC_DEFINE_UNQUOTED(LOCALEDIR, "$LOCALEDIR")
AC_SUBST(LOCALEDIR)
RPMCONFIGDIR="`echo ${prefix}/lib/rpm`"
AC_DEFINE_UNQUOTED(RPMCONFIGDIR, "$RPMCONFIGDIR")
AC_SUBST(RPMCONFIGDIR)
SYSCONFIGDIR="`echo /etc/rpm`"
AC_DEFINE_UNQUOTED(SYSCONFIGDIR, "$SYSCONFIGDIR")
AC_SUBST(SYSCONFIGDIR)
LIBRPMRC_FILENAME="${RPMCONFIGDIR}/rpmrc"
AC_DEFINE_UNQUOTED(LIBRPMRC_FILENAME, "$LIBRPMRC_FILENAME")
AC_SUBST(LIBRPMRC_FILENAME)
LIBRPMALIAS_FILENAME="${RPMCONFIGDIR}/rpmpopt"
AC_DEFINE_UNQUOTED(LIBRPMALIAS_FILENAME, "$LIBRPMALIAS_FILENAME")
AC_SUBST(LIBRPMALIAS_FILENAME)
FINDREQUIRES="${RPMCONFIGDIR}/find-requires"
AC_DEFINE_UNQUOTED(FINDREQUIRES, "$FINDREQUIRES")
AC_SUBST(FINDREQUIRES)
FINDPROVIDES="${RPMCONFIGDIR}/find-provides"
AC_DEFINE_UNQUOTED(FINDPROVIDES, "$FINDPROVIDES")
AC_SUBST(FINDPROVIDES)
MACROFILES="${RPMCONFIGDIR}/macros"
AC_DEFINE_UNQUOTED(MACROFILES, "$MACROFILES")
AC_SUBST(MACROFILES)

testdir="`pwd`/tests"
dnl AC_DEFINE_UNQUOTED(testdir, "$testdir")
AC_SUBST(testdir)

AC_SUBST(LIBOBJS)
AC_SUBST(INCPATH)

AC_SUBST(varprefix)
AC_SUBST(tmpdir)

AC_SUBST(LIBS)

AC_SUBST(RPM)
AC_SUBST(GZIPBIN)
AC_SUBST(BZIP2BIN)
AC_SUBST(PGPBIN)
AC_SUBST(FIXPERMS)
AC_SUBST(LIBMISC)
AC_SUBST(MKDIR_P)
AC_SUBST(LDFLAGS_STATIC)

# XXX Propagate -lucb to popt ...
export LIBS INCPATH

AC_CONFIG_SUBDIRS(popt)
AC_OUTPUT([Makefile rpmrc macros lib/Makefile
	build/Makefile tools/Makefile scripts/Makefile
	tests/Makefile tests/rpmrc tests/macros tests/hello-test/Makefile
	misc/Makefile po/Makefile.in intl/Makefile],
	[touch Makefile.in
	sed -e "/POTFILES =/r po/POTFILES" po/Makefile.in > po/Makefile])

