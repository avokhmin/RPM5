
  TODO
  ====

  RELEASE ENGINEERING ROADMAP
  ---------------------------

  This is the current RPM 5.0 release engineering roadmap:

  1. weekly Alpha releases in November 2007:
     - APIs:     still changing, no guarantees at all for stability
     - code:     still acceptable to be at least partly broken
     - audience: early adopters in RPM community only
     - purpose:  to get initial feedback
 
     2007-11-10  RPM 5.0a1   RPM 5.0 alpha 1                [DONE]
     2007-11-17  RPM 5.0a2   RPM 5.0 alpha 2                [TODO]
     2007-11-24  RPM 5.0a3   RPM 5.0 alpha 3                [TODO]
     2007-12-01  RPM 5.0a4   RPM 5.0 alpha 4                [TODO]
 
  2. weekly Beta releases in December 2007:
     - APIs:     mostly fixed, nearly a guarantee to be stable
     - code:     already stable, but perhaps still some subtle bugs
     - audience: RPM community, especially distro vendors
     - purpose:  to get final feedback
   
     2007-12-08  RPM 5.0b1   RPM 5.0 beta 1                 [TODO]
     2007-12-15  RPM 5.0b2   RPM 5.0 beta 2                 [TODO]
     2007-12-22  RPM 5.0b3   RPM 5.0 beta 3                 [TODO]
     2007-12-29  RPM 5.0b4   RPM 5.0 beta 4                 [TODO]
   
  3. release in January 2008:
     - APIs:     fully fixed, guaranteed to be kept stable
     - code:     stable, no more bugs known bugs left 
     - audience: RPM community as a whole
     - purpose:  provide RPM 5.0
   
     2007-01-05  CVS HEAD is branched into    RPM 5.0.x     [TODO]
     2007-01-05  CVS HEAD now becomes base of RPM 5.1.DEVEL [TODO]
     2007-01-05  RPM 5.0.0   RPM 5.0 patchlevel 0           [TODO]
     2007-01-05  press release                              [TODO]
     ...

  KNOWN PENDING ISSUES
  --------------------

  This is the list of known pending issues which still *HAVE* to be
  resolved during release engineering. Please do not just list any
  *CANDO* items.

  o to be resolved before RPM 5.0b1:
    - rse: provide RPM version number in C API for "#if RPM_VERSION > 0xXXXXXX" comparisons
    - rse: xar/ has weak (think RPM_CHECK_LIB) support its third-party libraries LibXML, OpenSSL, etc.
    - jbj: RPM_I18NSTRING_TYPE is likely still wonky, certainly true for
	rpm-python h['summary'] access.
    + jbj: RPMTAG_FILESTATE needs s/1/2/ type when header is loaded to succeed
	eliminating RPM_CHAR_TYPE. This is likely to show up oddly with a
	header sanity check failure somewhere, because RPM_MIN_TYPE has been
	changed. [DONE]
    - jbj: C++ and C have different rules regarding typedef'd enums like rpmTag.
	The definitions and usage are currently split awkwardly between
	rpmtag.h and header.h.
    - jbj: markReplacedFiles() subtly rewrites header back into rpmdb
	with altered RPMTAG_FILESTATES data. get/del/add sequence
	is needed instead.
    - jbj: sign *.rpm, convert to *.xar using txar, DSA verify w my pubkey
	"works", but not same FC8 package converted using txar and FC8 pubkey
	verify.
    - jbj: either do explicit QA on RPMv3 packages or rip out the support.
	Signature verification of RPMv3 packages is already disabled.
	I vote for ripping, but the code needs explicit testing if kept.
    - jbj: check that rpmbuild --sign is functional, or eliminate the option.

  o to be resolved before RPM 5.0.0:
    - rse: NEWS polishing

  RPM 5.1 ROADMAP ISSUES
  ----------------------
    - jbj: Heh, --import has *always* used the wrong data type for
	Summary/Description/Group. The header that carries the pubkey
	lacks RPMTAG_ARCH/RPMTAG_OS as well. Re-importing all pubkeys is
	one solution, but perhaps a "just works" slam-dunk hack is needed
	during --rebuildb, or with header extensions. When this issue is
	resolved, then rpm can/should use implicit, rather than explicit, data
	types for tag data.
